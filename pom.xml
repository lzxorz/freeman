<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.freeman</groupId>
    <artifactId>freeman-parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>${project.artifactId}</name>
    <url></url>
    <description>Freeman 后台管理系统</description>

    <modules>
        <module>freeman-common</module>
        <module>freeman-jpa-plus</module>
        <module>freeman-app</module>
    </modules>

    <properties>
        <spring.boot.version>2.1.4.RELEASE</spring.boot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.test.skip>true</maven.test.skip>
        <java.versionersion>1.8</java.versionersion>
        <lombok.version>1.18.8</lombok.version>
        <junit.version>4.12</junit.version>
        <ant.version>1.10.5</ant.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-fileupload.version>1.3.2</commons-fileupload.version>
        <commons-jexl3.version>3.1</commons-jexl3.version>
        <commons-fileupload.versionersion>1.3.1</commons-fileupload.versionersion>
        <httpclient.version>4.5.8</httpclient.version>
        <ruedigermoeller-fst.version>2.57</ruedigermoeller-fst.version><!--对象序列化-->
        <jmimemagic.version>0.1.5</jmimemagic.version>
        <thumbnailator.version>0.4.8</thumbnailator.version>
        <dozer.version>5.5.1</dozer.version><!--对象深度克隆-->
        <poi.version>3.17</poi.version><!--hutool poi-->
        <xercesImpl.version>2.11.0</xercesImpl.version><!--hutool poi sax-->
        <enjoy.version>4.2</enjoy.version><!--模板引擎-->
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <ip2region.version>1.7.2</ip2region.version>
        <hutool.version>4.5.6</hutool.version>
        <guava.version>27.1-jre</guava.version>
        <jackson.version>2.9.8</jackson.version>
        <fastjson.version>1.2.58</fastjson.version>
        <mysql-connector-java.version>8.0.16</mysql-connector-java.version>
        <druid.version>1.1.16</druid.version>
        <p6spy.version>3.8.1</p6spy.version>
        <!--<commons-email.version>1.4</commons-email.version>-->
        <javax.version>1.1.1</javax.version>
        <zxing.version>3.3.0</zxing.version>
        <UserAgentUtils.version>1.20</UserAgentUtils.version>
        <jsoup.version>1.14.2</jsoup.version>
        <metadata-extractor.version>2.9.1</metadata-extractor.version>
        <blade-patchca.version>1.0.5</blade-patchca.version>
        <shiro-spring.version>1.4.1</shiro-spring.version>
        <shiro-redis.version>3.2.3</shiro-redis.version>
        <java-jwt.version>3.8.1</java-jwt.version>
        <oltu-oauth2.version>1.0.2</oltu-oauth2.version>
        <quartz.version>2.3.0</quartz.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>
        <swagger.version>2.9.2</swagger.version>
    </properties>

    <!--父工程，管理所有依赖的版本，创建子项目的依赖不能出现版本号-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--<dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
            </dependency>-->
           <!-- <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
            </dependency>-->
            <!--<dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
            </dependency>-->
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
            </dependency>-->

            <!--注解代替代码 实体类getter/setter/constructor/toString/hash/equals, 日志@Slf4j/@Log4j, 同步, 关闭流-->
            <!--如果不想写private static final Logger logger = LoggerFactory.getLogger(XXX.class); 注解@Slf4j在类上-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <!--<optional>true</optional>-->
                <version>${lombok.version}</version>
            </dependency>

            <!--mapStruct依赖-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--Dao-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <!--<scope>runtime</scope>-->
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- druid springboot-->
            <!--<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>-->
            <!-- sql 打印 -->
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>

            <!-- Apache Commons -->
            <!--CLI 提供针对命令行参数，选项，选项组，强制选项等的简单API.
                Codec 包含一些通用的编码解码算法。包括一些语音编码器， Hex, Base64, 以及URL encoder.
                Collections 提供一个类包来扩展和增加标准的 Java Collection框架-->
            <!--文件上传-->
            <!--<dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>-->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-io</artifactId>
                        <groupId>commons-io</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- http请求 -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!-- 解析表达式 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-jexl3</artifactId>
                <version>${commons-jexl3.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Apache Tools Ant Tar Zip  -->
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${javax.version}</version>
            </dependency>
            <!-- Bean<->Bean的深度转换 -->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>${dozer.version}</version>
            </dependency>
            <!-- Java 序列化 -->
            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>${ruedigermoeller-fst.version}</version>
            </dependency>
            <!-- File MimeType ContentType -->
            <!--<dependency>
                <groupId>net.sf.jmimemagic</groupId>
                <artifactId>jmimemagic</artifactId>
                <version>${jmimemagic.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jackson</groupId>
                        <artifactId>jackson-xc</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jackson</groupId>
                        <artifactId>jackson-jaxrs</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>-->
            <!--<dependency>
                <groupId>com.google.status.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.5</version>
            </dependency>-->
            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- jackson-dataformat-xml -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--hutool-all 以下全部
                hutool-aop JDK动态代理封装，提供非IOC下的切面支持
                hutool-bloomFilter 布隆过滤，提供一些Hash算法的布隆过滤
                hutool-cache 缓存
                hutool-core 核心，包括Bean操作、日期、各种Util等
                hutool-cron 定时任务模块，提供类Crontab表达式的定时任务
                hutool-crypto 加密解密模块
                hutool-db JDBC封装后的数据操作，基于ActiveRecord思想
                hutool-dfa 基于DFA模型的多关键字查找
                hutool-extra 扩展模块，对第三方封装（模板引擎、邮件、Servlet、二维码等）
                hutool-http 基于HttpUrlConnection的Http客户端封装
                hutool-log 自动识别日志实现的日志门面
                hutool-script 脚本执行封装，例如Javascript
                hutool-setting 功能更强大的Setting配置文件和Properties封装
                hutool-system 系统参数调用封装（JVM信息等）
                hutool-json JSON实现
                hutool-captcha 图片验证码实现
                hutool-poi 针对POI中Excel的封装
                hutool-socket 基于Java的NIO和AIO的Socket封装-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- hutool excel相关-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>${xercesImpl.version}</version>
            </dependency>

            <!-- ip2region -->
            <dependency>
                <groupId>org.lionsoul</groupId>
                <artifactId>ip2region</artifactId>
                <version>${ip2region.version}</version>
            </dependency>
            <!--模板引擎-->
            <dependency>
                <groupId>com.jfinal</groupId>
                <artifactId>enjoy</artifactId>
                <version>${enjoy.version}</version>
            </dependency>
            <!-- 条形码、二维码生成  -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing.version}</version>
            </dependency>
            <!-- User Agent -->
            <dependency>
                <groupId>eu.bitwalker</groupId>
                <artifactId>UserAgentUtils</artifactId>
                <version>${UserAgentUtils.version}</version>
            </dependency>
            <!-- Jsoup HTTP -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <!-- 图片Meta获取 -->
            <dependency>
                <groupId>com.drewnoakes</groupId>
                <artifactId>metadata-extractor</artifactId>
                <version>${metadata-extractor.version}</version>
            </dependency>
            <!-- 缩略图工具  -->
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>
            <!-- 图片验证码生成  -->
            <dependency>
                <groupId>com.bladejava</groupId>
                <artifactId>blade-patchca</artifactId>
                <version>${blade-patchca.version}</version>
            </dependency>
            <!-- pinyin4j -->
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>

            <!-- 获取系统信息 -->
            <!--<dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.versionersion}</version>
            </dependency>-->

            <!-- shiro-spring权限管理 -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro-spring.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-beanutils</artifactId>
                        <groupId>commons-beanutils</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- shiro-redis缓存插件 -->
            <dependency>
                <groupId>org.crazycake</groupId>
                <artifactId>shiro-redis</artifactId>
                <version>${shiro-redis.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>shiro-core</artifactId>
                        <groupId>org.apache.shiro</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--<dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.3</version>
            </dependency>-->
            <!-- jwt -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <!-- oauth2.authzserver -->
            <!--<dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
                <version>${oltu-oauth2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.client</artifactId>
                <version>${oltu-oauth2.version}</version>
            </dependency>-->
            <!-- quartz -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!--swagger-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--项目构建-->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--镜像仓库-->
    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <name>Aliyun Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases><enabled>true</enabled></releases>
            <snapshots><enabled>false</enabled></snapshots>
        </repository>
         <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
             <releases><enabled>true</enabled></releases>
             <snapshots><enabled>false</enabled></snapshots>
         </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>Aliyun Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- license -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!--开发者信息-->
    <developers>
        <developer>
            <id>id</id>
            <name>刘志新</name>
            <email>lzxorz@163.com</email>
            <roles><role>Project coder</role></roles>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <!--所属组织信息-->
    <organization>
        <name>freeman</name>
        <url></url>
    </organization>

</project>
